.version 6.4
.target sm_75
.address_size 64

.visible .entry sgemm_ptx(
  .param .u64 A_param, .param .u64 B_param, .param .u64 C_param,
  .param .s32 m_param, .param .s32 n_param, .param .s32 k_param
){
  .reg .u64 A, B, C;
  .reg .s32 m, n, k;

  ld.param.u64 A, [A_param];
  ld.param.u64 B, [B_param];
  ld.param.u64 C, [C_param];
  ld.param.s32 m, [m_param];
  ld.param.s32 n, [n_param];
  ld.param.s32 k, [k_param];

  .reg .f32 a<128>;
  .reg .f32 b<8>;
  .reg .f32 c<64>;
  .reg .s32 lane;
  .reg .s32 warp;
  .reg .s32 bid_x;
  .reg .s32 bid_y;

  mov.u32 lane, %tid.x;
  mov.u32 warp, %tid.y;
  mov.u32 bid_x, %ctaid.x;
  mov.u32 bid_y, %ctaid.y;

  .reg .s32 size_float;
  .reg .s32 size_float_8;
  .reg .s32 loadA_stride;
  .reg .s32 loadB_stride;
  mov.s32 size_float, 4;
  mul.lo.s32 size_float_8, size_float, 8;

  // loadA & loadB
  .reg .u64 loadA_ptr;
  .reg .u64 loadB_ptr;
  .reg .s32 loadA_offset;
  .reg .s32 loadB_offset;
  .reg .s32 x_g;
  .reg .s32 y_g;
  .reg .s32 lane4;
  .reg .s32 imm128;

  mul.lo.s32 lane4, lane, 4;
  mov.s32 imm128, 128;
  mad.lo.s32 x_g, bid_x, imm128, lane4;
  mad.lo.s32 y_g, bid_y, imm128, lane4;
  mad.lo.s32 loadA_offset, warp, m, x_g;
  mad.lo.s32 loadB_offset, warp, n, y_g;

  mad.wide.s32 loadA_ptr, loadA_offset, size_float, A;
  mad.wide.s32 loadB_ptr, loadB_offset, size_float, B;

  .reg .f32 A_frag<4>;
  .reg .f32 B_frag<4>;

  ld.global.v4.f32 {A_frag0, A_frag1, A_frag2, A_frag3}, [loadA_ptr];
  ld.global.v4.f32 {B_frag0, B_frag1, B_frag2, B_frag3}, [loadB_ptr];

  .reg .s32 storeAs_ptr, storeBs_ptr;
  // storeAs_ptr = (warp*128+lane*4)*sizeof(float);
  shl.b32 storeAs_ptr, lane, 2;
  mad.lo.s32 storeAs_ptr, warp, imm128, storeAs_ptr;
  shl.b32 storeAs_ptr, storeAs_ptr, 2; // sizeof float
  add.s32 storeBs_ptr, storeAs_ptr, 4096;

  .reg .s32 loadAs_ptr, loadBs_ptr;
  .reg .s32 lane_m16, lane_d16, lane_m16_m2, lane_x, lane_y, warp_x, warp_y;
  // loadAs_ptr, loadBs_ptr;
  and.b32 lane_m16, lane, 15;
  shr.b32 lane_d16, lane, 4;
  // lane_x = lane%16/2;
  shr.b32 lane_x, lane_m16, 1;
  // lane_y = lane/16*2 + lane%16%2;
  shl.b32 lane_y, lane_d16, 1;
  and.b32 lane_m16_m2, lane_m16, 1;
  add.s32 lane_y, lane_y, lane_m16_m2;
  // warp_x = warp%2; warp_y = warp/2;
  and.b32 warp_x, warp, 1;
  shr.b32 warp_y, warp, 1;
  // loadAs_ptr = (warp_x*64 + lane_x*4)*4;
  shl.b32 loadAs_ptr, lane_x, 2;
  mad.lo.s32 loadAs_ptr, warp_x, 64, loadAs_ptr;
  shl.b32 loadAs_ptr, loadAs_ptr, 2;
  // loadBs_ptr = (warp_y*32 + lane_y*4 + 1024)*4;
  mov.u32 loadBs_ptr, 1024;
  mad.lo.s32 loadBs_ptr, lane_y, 4, loadBs_ptr;
  mad.lo.s32 loadBs_ptr, warp_y, 32, loadBs_ptr;
  shl.b32 loadBs_ptr, loadBs_ptr, 2;

  // storeC
  .reg .s32 storeC_offset, c_x, c_y;
  // int c_x = blockIdx_x*128 + warp_x*64 + lane_x*4; 
  // int c_y = blockIdx_y*128 + warp_y*32 + lane_y*4;
  // int storeC_offset = c_x + c_y*m;
  mul.lo.s32 c_x, lane_x, 4;
  mad.lo.s32 c_x, warp_x, 64, c_x;
  mad.lo.s32 c_x, bid_x, 128, c_x;

  mul.lo.s32 c_y, lane_y, 4;
  mad.lo.s32 c_y, warp_y, 32, c_y;
  mad.lo.s32 c_y, bid_y, 128, c_y;

  mad.lo.s32 storeC_offset, c_y, m, c_x;
  

  mov.f32 c0, 0f00000000;
  mov.f32 c1, 0f00000000;
  mov.f32 c2, 0f00000000;
  mov.f32 c3, 0f00000000;
  mov.f32 c4, 0f00000000;
  mov.f32 c5, 0f00000000;
  mov.f32 c6, 0f00000000;
  mov.f32 c7, 0f00000000;
  mov.f32 c8, 0f00000000;
  mov.f32 c9, 0f00000000;
  mov.f32 c10, 0f00000000;
  mov.f32 c11, 0f00000000;
  mov.f32 c12, 0f00000000;
  mov.f32 c13, 0f00000000;
  mov.f32 c14, 0f00000000;
  mov.f32 c15, 0f00000000;
  mov.f32 c16, 0f00000000;
  mov.f32 c17, 0f00000000;
  mov.f32 c18, 0f00000000;
  mov.f32 c19, 0f00000000;
  mov.f32 c20, 0f00000000;
  mov.f32 c21, 0f00000000;
  mov.f32 c22, 0f00000000;
  mov.f32 c23, 0f00000000;
  mov.f32 c24, 0f00000000;
  mov.f32 c25, 0f00000000;
  mov.f32 c26, 0f00000000;
  mov.f32 c27, 0f00000000;
  mov.f32 c28, 0f00000000;
  mov.f32 c29, 0f00000000;
  mov.f32 c30, 0f00000000;
  mov.f32 c31, 0f00000000;
  mov.f32 c32, 0f00000000;
  mov.f32 c33, 0f00000000;
  mov.f32 c34, 0f00000000;
  mov.f32 c35, 0f00000000;
  mov.f32 c36, 0f00000000;
  mov.f32 c37, 0f00000000;
  mov.f32 c38, 0f00000000;
  mov.f32 c39, 0f00000000;
  mov.f32 c40, 0f00000000;
  mov.f32 c41, 0f00000000;
  mov.f32 c42, 0f00000000;
  mov.f32 c43, 0f00000000;
  mov.f32 c44, 0f00000000;
  mov.f32 c45, 0f00000000;
  mov.f32 c46, 0f00000000;
  mov.f32 c47, 0f00000000;
  mov.f32 c48, 0f00000000;
  mov.f32 c49, 0f00000000;
  mov.f32 c50, 0f00000000;
  mov.f32 c51, 0f00000000;
  mov.f32 c52, 0f00000000;
  mov.f32 c53, 0f00000000;
  mov.f32 c54, 0f00000000;
  mov.f32 c55, 0f00000000;
  mov.f32 c56, 0f00000000;
  mov.f32 c57, 0f00000000;
  mov.f32 c58, 0f00000000;
  mov.f32 c59, 0f00000000;
  mov.f32 c60, 0f00000000;
  mov.f32 c61, 0f00000000;
  mov.f32 c62, 0f00000000;
  mov.f32 c63, 0f00000000;

  st.shared.v4.f32 [storeAs_ptr], {A_frag0, A_frag1, A_frag2, A_frag3};
  st.shared.v4.f32 [storeBs_ptr], {B_frag0, B_frag1, B_frag2, B_frag3};
  bar.sync 0;

  ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr];
  ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+128];
  ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr];
  ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+64];

  // TODO: double buffering
  .reg .pred p0;
  .reg .s32 k_local;
  mov.s32 k_local, 8;

l1:
  setp.lt.s32 p0, k_local, k;
  add.s32 k_local, k_local, 8;

  // k=0
  fma.rn.f32 c0, a0, b0, c0;
  fma.rn.f32 c1, a1, b0, c1;
  fma.rn.f32 c2, a2, b0, c2;
  fma.rn.f32 c3, a3, b0, c3;
  fma.rn.f32 c4, a4, b0, c4;
  fma.rn.f32 c5, a5, b0, c5;
  fma.rn.f32 c6, a6, b0, c6;
  fma.rn.f32 c7, a7, b0, c7;
  fma.rn.f32 c8, a0, b1, c8;
  fma.rn.f32 c9, a1, b1, c9;
  fma.rn.f32 c10, a2, b1, c10;
  fma.rn.f32 c11, a3, b1, c11;
  fma.rn.f32 c12, a4, b1, c12;
  fma.rn.f32 c13, a5, b1, c13;
  fma.rn.f32 c14, a6, b1, c14;
  fma.rn.f32 c15, a7, b1, c15;
  fma.rn.f32 c16, a0, b2, c16;
  fma.rn.f32 c17, a1, b2, c17;
  fma.rn.f32 c18, a2, b2, c18;
  fma.rn.f32 c19, a3, b2, c19;
  fma.rn.f32 c20, a4, b2, c20;
  fma.rn.f32 c21, a5, b2, c21;
  fma.rn.f32 c22, a6, b2, c22;
  fma.rn.f32 c23, a7, b2, c23;
  fma.rn.f32 c24, a0, b3, c24;
  fma.rn.f32 c25, a1, b3, c25;
  fma.rn.f32 c26, a2, b3, c26;
  fma.rn.f32 c27, a3, b3, c27;
  fma.rn.f32 c28, a4, b3, c28;
  fma.rn.f32 c29, a5, b3, c29;
  fma.rn.f32 c30, a6, b3, c30;
  fma.rn.f32 c31, a7, b3, c31;
  fma.rn.f32 c32, a0, b4, c32;
  fma.rn.f32 c33, a1, b4, c33;
  fma.rn.f32 c34, a2, b4, c34;
  fma.rn.f32 c35, a3, b4, c35;
  fma.rn.f32 c36, a4, b4, c36;
  fma.rn.f32 c37, a5, b4, c37;
  fma.rn.f32 c38, a6, b4, c38;
  fma.rn.f32 c39, a7, b4, c39;
  fma.rn.f32 c40, a0, b5, c40;
  fma.rn.f32 c41, a1, b5, c41;
  fma.rn.f32 c42, a2, b5, c42;
  fma.rn.f32 c43, a3, b5, c43;
  fma.rn.f32 c44, a4, b5, c44;
  fma.rn.f32 c45, a5, b5, c45;
  fma.rn.f32 c46, a6, b5, c46;
  fma.rn.f32 c47, a7, b5, c47;
  fma.rn.f32 c48, a0, b6, c48;
  fma.rn.f32 c49, a1, b6, c49;
  fma.rn.f32 c50, a2, b6, c50;
  fma.rn.f32 c51, a3, b6, c51;
  fma.rn.f32 c52, a4, b6, c52;
  fma.rn.f32 c53, a5, b6, c53;
  fma.rn.f32 c54, a6, b6, c54;
  fma.rn.f32 c55, a7, b6, c55;
  fma.rn.f32 c56, a0, b7, c56;
  fma.rn.f32 c57, a1, b7, c57;
  fma.rn.f32 c58, a2, b7, c58;
  fma.rn.f32 c59, a3, b7, c59;
  fma.rn.f32 c60, a4, b7, c60;
  fma.rn.f32 c61, a5, b7, c61;
  fma.rn.f32 c62, a6, b7, c62;
  fma.rn.f32 c63, a7, b7, c63;

  // k=1
  ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr+512];
  ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+640];
  ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr+512];
  ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+576];
  fma.rn.f32 c0, a0, b0, c0;
  fma.rn.f32 c1, a1, b0, c1;
  fma.rn.f32 c2, a2, b0, c2;
  fma.rn.f32 c3, a3, b0, c3;
  fma.rn.f32 c4, a4, b0, c4;
  fma.rn.f32 c5, a5, b0, c5;
  fma.rn.f32 c6, a6, b0, c6;
  fma.rn.f32 c7, a7, b0, c7;
  fma.rn.f32 c8, a0, b1, c8;
  fma.rn.f32 c9, a1, b1, c9;
  fma.rn.f32 c10, a2, b1, c10;
  fma.rn.f32 c11, a3, b1, c11;
  fma.rn.f32 c12, a4, b1, c12;
  fma.rn.f32 c13, a5, b1, c13;
  fma.rn.f32 c14, a6, b1, c14;
  fma.rn.f32 c15, a7, b1, c15;
  fma.rn.f32 c16, a0, b2, c16;
  fma.rn.f32 c17, a1, b2, c17;
  fma.rn.f32 c18, a2, b2, c18;
  fma.rn.f32 c19, a3, b2, c19;
  fma.rn.f32 c20, a4, b2, c20;
  fma.rn.f32 c21, a5, b2, c21;
  fma.rn.f32 c22, a6, b2, c22;
  fma.rn.f32 c23, a7, b2, c23;
  fma.rn.f32 c24, a0, b3, c24;
  fma.rn.f32 c25, a1, b3, c25;
  fma.rn.f32 c26, a2, b3, c26;
  fma.rn.f32 c27, a3, b3, c27;
  fma.rn.f32 c28, a4, b3, c28;
  fma.rn.f32 c29, a5, b3, c29;
  fma.rn.f32 c30, a6, b3, c30;
  fma.rn.f32 c31, a7, b3, c31;
  fma.rn.f32 c32, a0, b4, c32;
  fma.rn.f32 c33, a1, b4, c33;
  fma.rn.f32 c34, a2, b4, c34;
  fma.rn.f32 c35, a3, b4, c35;
  fma.rn.f32 c36, a4, b4, c36;
  fma.rn.f32 c37, a5, b4, c37;
  fma.rn.f32 c38, a6, b4, c38;
  fma.rn.f32 c39, a7, b4, c39;
  fma.rn.f32 c40, a0, b5, c40;
  fma.rn.f32 c41, a1, b5, c41;
  fma.rn.f32 c42, a2, b5, c42;
  fma.rn.f32 c43, a3, b5, c43;
  fma.rn.f32 c44, a4, b5, c44;
  fma.rn.f32 c45, a5, b5, c45;
  fma.rn.f32 c46, a6, b5, c46;
  fma.rn.f32 c47, a7, b5, c47;
  fma.rn.f32 c48, a0, b6, c48;
  fma.rn.f32 c49, a1, b6, c49;
  fma.rn.f32 c50, a2, b6, c50;
  fma.rn.f32 c51, a3, b6, c51;
  fma.rn.f32 c52, a4, b6, c52;
  fma.rn.f32 c53, a5, b6, c53;
  fma.rn.f32 c54, a6, b6, c54;
  fma.rn.f32 c55, a7, b6, c55;
  fma.rn.f32 c56, a0, b7, c56;
  fma.rn.f32 c57, a1, b7, c57;
  fma.rn.f32 c58, a2, b7, c58;
  fma.rn.f32 c59, a3, b7, c59;
  fma.rn.f32 c60, a4, b7, c60;
  fma.rn.f32 c61, a5, b7, c61;
  fma.rn.f32 c62, a6, b7, c62;
  fma.rn.f32 c63, a7, b7, c63;

  mad.wide.s32 loadA_ptr, size_float_8, m, loadA_ptr;
  mad.wide.s32 loadB_ptr, size_float_8, n, loadB_ptr;

  @p0 ld.global.v4.f32 {A_frag0, A_frag1, A_frag2, A_frag3}, [loadA_ptr];
  @p0 ld.global.v4.f32 {B_frag0, B_frag1, B_frag2, B_frag3}, [loadB_ptr];

  // k=2
  ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr+1024];
  ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+1152];
  ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr+1024];
  ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+1088];
  fma.rn.f32 c0, a0, b0, c0;
  fma.rn.f32 c1, a1, b0, c1;
  fma.rn.f32 c2, a2, b0, c2;
  fma.rn.f32 c3, a3, b0, c3;
  fma.rn.f32 c4, a4, b0, c4;
  fma.rn.f32 c5, a5, b0, c5;
  fma.rn.f32 c6, a6, b0, c6;
  fma.rn.f32 c7, a7, b0, c7;
  fma.rn.f32 c8, a0, b1, c8;
  fma.rn.f32 c9, a1, b1, c9;
  fma.rn.f32 c10, a2, b1, c10;
  fma.rn.f32 c11, a3, b1, c11;
  fma.rn.f32 c12, a4, b1, c12;
  fma.rn.f32 c13, a5, b1, c13;
  fma.rn.f32 c14, a6, b1, c14;
  fma.rn.f32 c15, a7, b1, c15;
  fma.rn.f32 c16, a0, b2, c16;
  fma.rn.f32 c17, a1, b2, c17;
  fma.rn.f32 c18, a2, b2, c18;
  fma.rn.f32 c19, a3, b2, c19;
  fma.rn.f32 c20, a4, b2, c20;
  fma.rn.f32 c21, a5, b2, c21;
  fma.rn.f32 c22, a6, b2, c22;
  fma.rn.f32 c23, a7, b2, c23;
  fma.rn.f32 c24, a0, b3, c24;
  fma.rn.f32 c25, a1, b3, c25;
  fma.rn.f32 c26, a2, b3, c26;
  fma.rn.f32 c27, a3, b3, c27;
  fma.rn.f32 c28, a4, b3, c28;
  fma.rn.f32 c29, a5, b3, c29;
  fma.rn.f32 c30, a6, b3, c30;
  fma.rn.f32 c31, a7, b3, c31;
  fma.rn.f32 c32, a0, b4, c32;
  fma.rn.f32 c33, a1, b4, c33;
  fma.rn.f32 c34, a2, b4, c34;
  fma.rn.f32 c35, a3, b4, c35;
  fma.rn.f32 c36, a4, b4, c36;
  fma.rn.f32 c37, a5, b4, c37;
  fma.rn.f32 c38, a6, b4, c38;
  fma.rn.f32 c39, a7, b4, c39;
  fma.rn.f32 c40, a0, b5, c40;
  fma.rn.f32 c41, a1, b5, c41;
  fma.rn.f32 c42, a2, b5, c42;
  fma.rn.f32 c43, a3, b5, c43;
  fma.rn.f32 c44, a4, b5, c44;
  fma.rn.f32 c45, a5, b5, c45;
  fma.rn.f32 c46, a6, b5, c46;
  fma.rn.f32 c47, a7, b5, c47;
  fma.rn.f32 c48, a0, b6, c48;
  fma.rn.f32 c49, a1, b6, c49;
  fma.rn.f32 c50, a2, b6, c50;
  fma.rn.f32 c51, a3, b6, c51;
  fma.rn.f32 c52, a4, b6, c52;
  fma.rn.f32 c53, a5, b6, c53;
  fma.rn.f32 c54, a6, b6, c54;
  fma.rn.f32 c55, a7, b6, c55;
  fma.rn.f32 c56, a0, b7, c56;
  fma.rn.f32 c57, a1, b7, c57;
  fma.rn.f32 c58, a2, b7, c58;
  fma.rn.f32 c59, a3, b7, c59;
  fma.rn.f32 c60, a4, b7, c60;
  fma.rn.f32 c61, a5, b7, c61;
  fma.rn.f32 c62, a6, b7, c62;
  fma.rn.f32 c63, a7, b7, c63;

  // k=3
  ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr+1536];
  ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+1664];
  ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr+1536];
  ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+1600];
  fma.rn.f32 c0, a0, b0, c0;
  fma.rn.f32 c1, a1, b0, c1;
  fma.rn.f32 c2, a2, b0, c2;
  fma.rn.f32 c3, a3, b0, c3;
  fma.rn.f32 c4, a4, b0, c4;
  fma.rn.f32 c5, a5, b0, c5;
  fma.rn.f32 c6, a6, b0, c6;
  fma.rn.f32 c7, a7, b0, c7;
  fma.rn.f32 c8, a0, b1, c8;
  fma.rn.f32 c9, a1, b1, c9;
  fma.rn.f32 c10, a2, b1, c10;
  fma.rn.f32 c11, a3, b1, c11;
  fma.rn.f32 c12, a4, b1, c12;
  fma.rn.f32 c13, a5, b1, c13;
  fma.rn.f32 c14, a6, b1, c14;
  fma.rn.f32 c15, a7, b1, c15;
  fma.rn.f32 c16, a0, b2, c16;
  fma.rn.f32 c17, a1, b2, c17;
  fma.rn.f32 c18, a2, b2, c18;
  fma.rn.f32 c19, a3, b2, c19;
  fma.rn.f32 c20, a4, b2, c20;
  fma.rn.f32 c21, a5, b2, c21;
  fma.rn.f32 c22, a6, b2, c22;
  fma.rn.f32 c23, a7, b2, c23;
  fma.rn.f32 c24, a0, b3, c24;
  fma.rn.f32 c25, a1, b3, c25;
  fma.rn.f32 c26, a2, b3, c26;
  fma.rn.f32 c27, a3, b3, c27;
  fma.rn.f32 c28, a4, b3, c28;
  fma.rn.f32 c29, a5, b3, c29;
  fma.rn.f32 c30, a6, b3, c30;
  fma.rn.f32 c31, a7, b3, c31;
  fma.rn.f32 c32, a0, b4, c32;
  fma.rn.f32 c33, a1, b4, c33;
  fma.rn.f32 c34, a2, b4, c34;
  fma.rn.f32 c35, a3, b4, c35;
  fma.rn.f32 c36, a4, b4, c36;
  fma.rn.f32 c37, a5, b4, c37;
  fma.rn.f32 c38, a6, b4, c38;
  fma.rn.f32 c39, a7, b4, c39;
  fma.rn.f32 c40, a0, b5, c40;
  fma.rn.f32 c41, a1, b5, c41;
  fma.rn.f32 c42, a2, b5, c42;
  fma.rn.f32 c43, a3, b5, c43;
  fma.rn.f32 c44, a4, b5, c44;
  fma.rn.f32 c45, a5, b5, c45;
  fma.rn.f32 c46, a6, b5, c46;
  fma.rn.f32 c47, a7, b5, c47;
  fma.rn.f32 c48, a0, b6, c48;
  fma.rn.f32 c49, a1, b6, c49;
  fma.rn.f32 c50, a2, b6, c50;
  fma.rn.f32 c51, a3, b6, c51;
  fma.rn.f32 c52, a4, b6, c52;
  fma.rn.f32 c53, a5, b6, c53;
  fma.rn.f32 c54, a6, b6, c54;
  fma.rn.f32 c55, a7, b6, c55;
  fma.rn.f32 c56, a0, b7, c56;
  fma.rn.f32 c57, a1, b7, c57;
  fma.rn.f32 c58, a2, b7, c58;
  fma.rn.f32 c59, a3, b7, c59;
  fma.rn.f32 c60, a4, b7, c60;
  fma.rn.f32 c61, a5, b7, c61;
  fma.rn.f32 c62, a6, b7, c62;
  fma.rn.f32 c63, a7, b7, c63;

  // k=4
  ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr+2048];
  ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+2176];
  ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr+2048];
  ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+2112];
  fma.rn.f32 c0, a0, b0, c0;
  fma.rn.f32 c1, a1, b0, c1;
  fma.rn.f32 c2, a2, b0, c2;
  fma.rn.f32 c3, a3, b0, c3;
  fma.rn.f32 c4, a4, b0, c4;
  fma.rn.f32 c5, a5, b0, c5;
  fma.rn.f32 c6, a6, b0, c6;
  fma.rn.f32 c7, a7, b0, c7;
  fma.rn.f32 c8, a0, b1, c8;
  fma.rn.f32 c9, a1, b1, c9;
  fma.rn.f32 c10, a2, b1, c10;
  fma.rn.f32 c11, a3, b1, c11;
  fma.rn.f32 c12, a4, b1, c12;
  fma.rn.f32 c13, a5, b1, c13;
  fma.rn.f32 c14, a6, b1, c14;
  fma.rn.f32 c15, a7, b1, c15;
  fma.rn.f32 c16, a0, b2, c16;
  fma.rn.f32 c17, a1, b2, c17;
  fma.rn.f32 c18, a2, b2, c18;
  fma.rn.f32 c19, a3, b2, c19;
  fma.rn.f32 c20, a4, b2, c20;
  fma.rn.f32 c21, a5, b2, c21;
  fma.rn.f32 c22, a6, b2, c22;
  fma.rn.f32 c23, a7, b2, c23;
  fma.rn.f32 c24, a0, b3, c24;
  fma.rn.f32 c25, a1, b3, c25;
  fma.rn.f32 c26, a2, b3, c26;
  fma.rn.f32 c27, a3, b3, c27;
  fma.rn.f32 c28, a4, b3, c28;
  fma.rn.f32 c29, a5, b3, c29;
  fma.rn.f32 c30, a6, b3, c30;
  fma.rn.f32 c31, a7, b3, c31;
  fma.rn.f32 c32, a0, b4, c32;
  fma.rn.f32 c33, a1, b4, c33;
  fma.rn.f32 c34, a2, b4, c34;
  fma.rn.f32 c35, a3, b4, c35;
  fma.rn.f32 c36, a4, b4, c36;
  fma.rn.f32 c37, a5, b4, c37;
  fma.rn.f32 c38, a6, b4, c38;
  fma.rn.f32 c39, a7, b4, c39;
  fma.rn.f32 c40, a0, b5, c40;
  fma.rn.f32 c41, a1, b5, c41;
  fma.rn.f32 c42, a2, b5, c42;
  fma.rn.f32 c43, a3, b5, c43;
  fma.rn.f32 c44, a4, b5, c44;
  fma.rn.f32 c45, a5, b5, c45;
  fma.rn.f32 c46, a6, b5, c46;
  fma.rn.f32 c47, a7, b5, c47;
  fma.rn.f32 c48, a0, b6, c48;
  fma.rn.f32 c49, a1, b6, c49;
  fma.rn.f32 c50, a2, b6, c50;
  fma.rn.f32 c51, a3, b6, c51;
  fma.rn.f32 c52, a4, b6, c52;
  fma.rn.f32 c53, a5, b6, c53;
  fma.rn.f32 c54, a6, b6, c54;
  fma.rn.f32 c55, a7, b6, c55;
  fma.rn.f32 c56, a0, b7, c56;
  fma.rn.f32 c57, a1, b7, c57;
  fma.rn.f32 c58, a2, b7, c58;
  fma.rn.f32 c59, a3, b7, c59;
  fma.rn.f32 c60, a4, b7, c60;
  fma.rn.f32 c61, a5, b7, c61;
  fma.rn.f32 c62, a6, b7, c62;
  fma.rn.f32 c63, a7, b7, c63;

  // k=5
  ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr+2560];
  ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+2688];
  ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr+2560];
  ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+2624];
  fma.rn.f32 c0, a0, b0, c0;
  fma.rn.f32 c1, a1, b0, c1;
  fma.rn.f32 c2, a2, b0, c2;
  fma.rn.f32 c3, a3, b0, c3;
  fma.rn.f32 c4, a4, b0, c4;
  fma.rn.f32 c5, a5, b0, c5;
  fma.rn.f32 c6, a6, b0, c6;
  fma.rn.f32 c7, a7, b0, c7;
  fma.rn.f32 c8, a0, b1, c8;
  fma.rn.f32 c9, a1, b1, c9;
  fma.rn.f32 c10, a2, b1, c10;
  fma.rn.f32 c11, a3, b1, c11;
  fma.rn.f32 c12, a4, b1, c12;
  fma.rn.f32 c13, a5, b1, c13;
  fma.rn.f32 c14, a6, b1, c14;
  fma.rn.f32 c15, a7, b1, c15;
  fma.rn.f32 c16, a0, b2, c16;
  fma.rn.f32 c17, a1, b2, c17;
  fma.rn.f32 c18, a2, b2, c18;
  fma.rn.f32 c19, a3, b2, c19;
  fma.rn.f32 c20, a4, b2, c20;
  fma.rn.f32 c21, a5, b2, c21;
  fma.rn.f32 c22, a6, b2, c22;
  fma.rn.f32 c23, a7, b2, c23;
  fma.rn.f32 c24, a0, b3, c24;
  fma.rn.f32 c25, a1, b3, c25;
  fma.rn.f32 c26, a2, b3, c26;
  fma.rn.f32 c27, a3, b3, c27;
  fma.rn.f32 c28, a4, b3, c28;
  fma.rn.f32 c29, a5, b3, c29;
  fma.rn.f32 c30, a6, b3, c30;
  fma.rn.f32 c31, a7, b3, c31;
  fma.rn.f32 c32, a0, b4, c32;
  fma.rn.f32 c33, a1, b4, c33;
  fma.rn.f32 c34, a2, b4, c34;
  fma.rn.f32 c35, a3, b4, c35;
  fma.rn.f32 c36, a4, b4, c36;
  fma.rn.f32 c37, a5, b4, c37;
  fma.rn.f32 c38, a6, b4, c38;
  fma.rn.f32 c39, a7, b4, c39;
  fma.rn.f32 c40, a0, b5, c40;
  fma.rn.f32 c41, a1, b5, c41;
  fma.rn.f32 c42, a2, b5, c42;
  fma.rn.f32 c43, a3, b5, c43;
  fma.rn.f32 c44, a4, b5, c44;
  fma.rn.f32 c45, a5, b5, c45;
  fma.rn.f32 c46, a6, b5, c46;
  fma.rn.f32 c47, a7, b5, c47;
  fma.rn.f32 c48, a0, b6, c48;
  fma.rn.f32 c49, a1, b6, c49;
  fma.rn.f32 c50, a2, b6, c50;
  fma.rn.f32 c51, a3, b6, c51;
  fma.rn.f32 c52, a4, b6, c52;
  fma.rn.f32 c53, a5, b6, c53;
  fma.rn.f32 c54, a6, b6, c54;
  fma.rn.f32 c55, a7, b6, c55;
  fma.rn.f32 c56, a0, b7, c56;
  fma.rn.f32 c57, a1, b7, c57;
  fma.rn.f32 c58, a2, b7, c58;
  fma.rn.f32 c59, a3, b7, c59;
  fma.rn.f32 c60, a4, b7, c60;
  fma.rn.f32 c61, a5, b7, c61;
  fma.rn.f32 c62, a6, b7, c62;
  fma.rn.f32 c63, a7, b7, c63;

  // k=6
  ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr+3072];
  ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+3200];
  ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr+3072];
  ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+3136];
  fma.rn.f32 c0, a0, b0, c0;
  fma.rn.f32 c1, a1, b0, c1;
  fma.rn.f32 c2, a2, b0, c2;
  fma.rn.f32 c3, a3, b0, c3;
  fma.rn.f32 c4, a4, b0, c4;
  fma.rn.f32 c5, a5, b0, c5;
  fma.rn.f32 c6, a6, b0, c6;
  fma.rn.f32 c7, a7, b0, c7;
  fma.rn.f32 c8, a0, b1, c8;
  fma.rn.f32 c9, a1, b1, c9;
  fma.rn.f32 c10, a2, b1, c10;
  fma.rn.f32 c11, a3, b1, c11;
  fma.rn.f32 c12, a4, b1, c12;
  fma.rn.f32 c13, a5, b1, c13;
  fma.rn.f32 c14, a6, b1, c14;
  fma.rn.f32 c15, a7, b1, c15;
  fma.rn.f32 c16, a0, b2, c16;
  fma.rn.f32 c17, a1, b2, c17;
  fma.rn.f32 c18, a2, b2, c18;
  fma.rn.f32 c19, a3, b2, c19;
  fma.rn.f32 c20, a4, b2, c20;
  fma.rn.f32 c21, a5, b2, c21;
  fma.rn.f32 c22, a6, b2, c22;
  fma.rn.f32 c23, a7, b2, c23;
  fma.rn.f32 c24, a0, b3, c24;
  fma.rn.f32 c25, a1, b3, c25;
  fma.rn.f32 c26, a2, b3, c26;
  fma.rn.f32 c27, a3, b3, c27;
  fma.rn.f32 c28, a4, b3, c28;
  fma.rn.f32 c29, a5, b3, c29;
  fma.rn.f32 c30, a6, b3, c30;
  fma.rn.f32 c31, a7, b3, c31;
  fma.rn.f32 c32, a0, b4, c32;
  fma.rn.f32 c33, a1, b4, c33;
  fma.rn.f32 c34, a2, b4, c34;
  fma.rn.f32 c35, a3, b4, c35;
  fma.rn.f32 c36, a4, b4, c36;
  fma.rn.f32 c37, a5, b4, c37;
  fma.rn.f32 c38, a6, b4, c38;
  fma.rn.f32 c39, a7, b4, c39;
  fma.rn.f32 c40, a0, b5, c40;
  fma.rn.f32 c41, a1, b5, c41;
  fma.rn.f32 c42, a2, b5, c42;
  fma.rn.f32 c43, a3, b5, c43;
  fma.rn.f32 c44, a4, b5, c44;
  fma.rn.f32 c45, a5, b5, c45;
  fma.rn.f32 c46, a6, b5, c46;
  fma.rn.f32 c47, a7, b5, c47;
  fma.rn.f32 c48, a0, b6, c48;
  fma.rn.f32 c49, a1, b6, c49;
  fma.rn.f32 c50, a2, b6, c50;
  fma.rn.f32 c51, a3, b6, c51;
  fma.rn.f32 c52, a4, b6, c52;
  fma.rn.f32 c53, a5, b6, c53;
  fma.rn.f32 c54, a6, b6, c54;
  fma.rn.f32 c55, a7, b6, c55;
  fma.rn.f32 c56, a0, b7, c56;
  fma.rn.f32 c57, a1, b7, c57;
  fma.rn.f32 c58, a2, b7, c58;
  fma.rn.f32 c59, a3, b7, c59;
  fma.rn.f32 c60, a4, b7, c60;
  fma.rn.f32 c61, a5, b7, c61;
  fma.rn.f32 c62, a6, b7, c62;
  fma.rn.f32 c63, a7, b7, c63;

  // k=7
  ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr+3584];
  ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+3712];
  ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr+3584];
  ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+3648];
  fma.rn.f32 c0, a0, b0, c0;
  fma.rn.f32 c1, a1, b0, c1;
  fma.rn.f32 c2, a2, b0, c2;
  fma.rn.f32 c3, a3, b0, c3;
  fma.rn.f32 c4, a4, b0, c4;
  fma.rn.f32 c5, a5, b0, c5;
  fma.rn.f32 c6, a6, b0, c6;
  fma.rn.f32 c7, a7, b0, c7;
  fma.rn.f32 c8, a0, b1, c8;
  fma.rn.f32 c9, a1, b1, c9;
  fma.rn.f32 c10, a2, b1, c10;
  fma.rn.f32 c11, a3, b1, c11;
  fma.rn.f32 c12, a4, b1, c12;
  fma.rn.f32 c13, a5, b1, c13;
  fma.rn.f32 c14, a6, b1, c14;
  fma.rn.f32 c15, a7, b1, c15;
  fma.rn.f32 c16, a0, b2, c16;
  fma.rn.f32 c17, a1, b2, c17;
  fma.rn.f32 c18, a2, b2, c18;
  fma.rn.f32 c19, a3, b2, c19;
  fma.rn.f32 c20, a4, b2, c20;
  fma.rn.f32 c21, a5, b2, c21;
  fma.rn.f32 c22, a6, b2, c22;
  fma.rn.f32 c23, a7, b2, c23;
  fma.rn.f32 c24, a0, b3, c24;
  fma.rn.f32 c25, a1, b3, c25;
  fma.rn.f32 c26, a2, b3, c26;
  fma.rn.f32 c27, a3, b3, c27;
  fma.rn.f32 c28, a4, b3, c28;
  fma.rn.f32 c29, a5, b3, c29;
  fma.rn.f32 c30, a6, b3, c30;
  fma.rn.f32 c31, a7, b3, c31;
  fma.rn.f32 c32, a0, b4, c32;
  fma.rn.f32 c33, a1, b4, c33;
  fma.rn.f32 c34, a2, b4, c34;
  fma.rn.f32 c35, a3, b4, c35;
  fma.rn.f32 c36, a4, b4, c36;
  fma.rn.f32 c37, a5, b4, c37;
  fma.rn.f32 c38, a6, b4, c38;
  fma.rn.f32 c39, a7, b4, c39;
  fma.rn.f32 c40, a0, b5, c40;
  fma.rn.f32 c41, a1, b5, c41;
  fma.rn.f32 c42, a2, b5, c42;
  fma.rn.f32 c43, a3, b5, c43;
  fma.rn.f32 c44, a4, b5, c44;
  fma.rn.f32 c45, a5, b5, c45;
  fma.rn.f32 c46, a6, b5, c46;
  fma.rn.f32 c47, a7, b5, c47;
  fma.rn.f32 c48, a0, b6, c48;
  fma.rn.f32 c49, a1, b6, c49;
  fma.rn.f32 c50, a2, b6, c50;
  fma.rn.f32 c51, a3, b6, c51;
  fma.rn.f32 c52, a4, b6, c52;
  fma.rn.f32 c53, a5, b6, c53;
  fma.rn.f32 c54, a6, b6, c54;
  fma.rn.f32 c55, a7, b6, c55;
  fma.rn.f32 c56, a0, b7, c56;
  fma.rn.f32 c57, a1, b7, c57;
  fma.rn.f32 c58, a2, b7, c58;
  fma.rn.f32 c59, a3, b7, c59;
  fma.rn.f32 c60, a4, b7, c60;
  fma.rn.f32 c61, a5, b7, c61;
  fma.rn.f32 c62, a6, b7, c62;
  fma.rn.f32 c63, a7, b7, c63;

  @p0 bar.sync 0; // TODO: smem double buffer
  @p0 st.shared.v4.f32 [storeAs_ptr], {A_frag0, A_frag1, A_frag2, A_frag3};
  @p0 st.shared.v4.f32 [storeBs_ptr], {B_frag0, B_frag1, B_frag2, B_frag3};
  @p0 bar.sync 0;

  @p0 ld.shared.v4.f32 {a0, a1, a2, a3}, [loadAs_ptr];
  @p0 ld.shared.v4.f32 {a4, a5, a6, a7}, [loadAs_ptr+128];
  @p0 ld.shared.v4.f32 {b0, b1, b2, b3}, [loadBs_ptr];
  @p0 ld.shared.v4.f32 {b4, b5, b6, b7}, [loadBs_ptr+64];

  @p0 bra l1;

  // store C
  .reg .u64 storeC_ptr;
  .reg .s32 size_float_c;
  mov.s32 size_float_c, 4;

  mad.wide.s32 storeC_ptr, storeC_offset, size_float_c, C;

  st.global.v4.f32 [storeC_ptr], {c0, c1, c2, c3};
  st.global.v4.f32 [storeC_ptr+128], {c4, c5, c6, c7};
  mad.wide.s32 storeC_ptr, size_float_c, m, storeC_ptr;
  st.global.v4.f32 [storeC_ptr], {c8, c9, c10, c11};
  st.global.v4.f32 [storeC_ptr+128], {c12, c13, c14, c15};
  mad.wide.s32 storeC_ptr, size_float_c, m, storeC_ptr;
  st.global.v4.f32 [storeC_ptr], {c16, c17, c18, c19};
  st.global.v4.f32 [storeC_ptr+128], {c20, c21, c22, c23};
  mad.wide.s32 storeC_ptr, size_float_c, m, storeC_ptr;
  st.global.v4.f32 [storeC_ptr], {c24, c25, c26, c27};
  st.global.v4.f32 [storeC_ptr+128], {c28, c29, c30, c31};

  .reg .s32 imm52;
  mov.s32 imm52, 52;

  st.global.v4.f32 [storeC_ptr], {c32, c33, c34, c35};
  st.global.v4.f32 [storeC_ptr+128], {c36, c37, c38, c39};
  mad.wide.s32 storeC_ptr, size_float_c, m, storeC_ptr;
  st.global.v4.f32 [storeC_ptr], {c40, c41, c42, c43};
  st.global.v4.f32 [storeC_ptr+128], {c44, c45, c46, c47};
  mad.wide.s32 storeC_ptr, size_float_c, m, storeC_ptr;
  st.global.v4.f32 [storeC_ptr], {c48, c49, c50, c51};
  st.global.v4.f32 [storeC_ptr+128], {c52, c53, c54, c55};
  mad.wide.s32 storeC_ptr, size_float_c, m, storeC_ptr;
  st.global.v4.f32 [storeC_ptr], {c56, c57, c58, c59};
  st.global.v4.f32 [storeC_ptr+128], {c60, c61, c62, c63};

  ret;
}