
hgemm1688_256x256_tn(s64 A, s64 B, s64 C, s32 m, s32 n, s32 k){
  s32 lane, warp;
  s32 bid_x, bid_y, bid_z;
  s32 blk_x, blk_y;

  s2r lane, threadIdx_x;
  s2r warp, threadIdx_y;
  s2r bid_x, blockIdx_x;
  s2r bid_y, blockIdx_y;
  s2r bid_z, blockIdx_z;

  // swizzling
  imad blk_x, bid_z, gridDim_x, bid_x;
  
  // if(bid_z%2 == 1) blk_y = gridDim.y - bid_y;
  // else blk_y = bid_y  
  // s32 bid_zm2;
  // pred is_odd;
  // lop3.lut bid_zm2, bid_z, 1, rz, 192;
  // isetp.eq.and is_odd, pt, bid_zm2, 1, pt;
  mov blk_y, bid_y;
  // @is_odd iadd3 blk_y, -bid_y, gridDim_y, rz;
  // @is_odd iadd3 blk_y, blk_y, -1, rz;


  s32 lane_x, lane_y;
  // lane_x = lane%4; lane_y = lane/4;
  lop3.lut lane_x, lane, 3, rz, 192;
  shf.r lane_y, lane, 2, rz;

  // loadA = (blk_x*256 + lane_y + warp*8) * lda + lane_x*8; *sizeof(half); where lda = k
  s32 loadA, loadB;
  imad loadA, blk_x, 256, lane_y;
  imad loadA, warp, 8, loadA;
  imad loadA, loadA, k, rz;
  imad loadA, lane_x, 8, loadA;

  // loadB = (blk_y*256 + lane_y + warp*8) * ldb + lane_x*8;
  imad loadB, blk_y, 256, lane_y;
  imad loadB, warp, 8, loadB;
  imad loadB, loadB, k, rz; // ...*ldb
  imad loadB, lane_x, 8, loadB;

  // load A and B from gmem
  b32 .v4 A_fragment[16];
  b32 .v4 B_fragment[16];
  s64 loadA_ptr, loadB_ptr;
  s32 size_half;
  mov size_half, 2;
  imad.wide loadA_ptr, loadA, size_half, A;
  imad.wide loadB_ptr, loadB, size_half, B;
  s32 loadA_stride, loadB_stride;
  mov loadA_stride, k; // lda
  mov loadB_stride, k; // ldb
  imad loadA_stride, loadA_stride, 128, rz; // 64*2
  imad loadB_stride, loadB_stride, 128, rz;

  ldg.128 A_fragment[0:3], [loadA_ptr]; // {} // 
  imad.wide loadA_ptr, loadA_stride, 1, loadA_ptr;
  ldg.128 A_fragment[4:7], [loadA_ptr]; // {}
  imad.wide loadA_ptr, loadA_stride, 1, loadA_ptr;
  ldg.128 A_fragment[8:11], [loadA_ptr]; // {}
  imad.wide loadA_ptr, loadA_stride, 1, loadA_ptr;
  ldg.128 A_fragment[12:15], [loadA_ptr]; // {}

  ldg.128 B_fragment[0:3], [loadB_ptr]; // {}
  imad.wide loadB_ptr, loadB_stride, 1, loadB_ptr;
  ldg.128 B_fragment[4:7], [loadB_ptr]; // {}
  imad.wide loadB_ptr, loadB_stride, 1, loadB_ptr;
  ldg.128 B_fragment[8:11], [loadB_ptr]; // {}
  imad.wide loadB_ptr, loadB_stride, 1, loadB_ptr;
  ldg.128 B_fragment[12:15], [loadB_ptr]; // {}

  // iadd3 loadA, loadA, 32, rz;
  // iadd3 loadB, loadB, 32, rz;
  


  // A[256][32]
  s32 storeAs, storeBs, lane_yd2;
  shf.r lane_yd2, lane_y, 1, rz;
  // storeAs = (warp*8*36 + lane_y*32 + lane_y/2*8 + lane_x*8) * sizeof(half);
  imad storeAs, warp, 288, rz;
  imad storeAs, lane_y, 32, storeAs;
  imad storeAs, lane_yd2, 8, storeAs;
  imad storeAs, lane_x, 8, storeAs;
  imad storeAs, storeAs, 2, rz;
  // storeBs = storeAs + 256*36*2 (18432);
  iadd3 storeBs, storeAs, 18432, rz;

  s32 loadAs, loadBs;
  s32 warp_x, warp_y;
  lop3.lut warp_x, warp, 3, rz, 192;
  shf.r warp_y, warp, 2, rz;
  // loadAs = A[warp_y*128+lane_y][lane_x*2]; (warp_y*128*36+lane_y*32+lane_y/2*8 + lane_x*2) * sizeof(half)
  imad loadAs, warp_y, 4608, rz;
  imad loadAs, lane_y, 32, loadAs;
  imad loadAs, lane_yd2, 8, loadAs;
  imad loadAs, lane_x, 2, loadAs;
  imad loadAs, loadAs, 2, rz;  

  // loadBs = B[warp_x*64+lane_y][lane_x*2];
  imad loadBs, warp_x, 2304, rz;
  imad loadBs, lane_y, 32, loadBs;
  imad loadBs, lane_yd2, 8, loadBs;
  imad loadBs, lane_x, 2, loadBs;
  imad loadBs, loadBs, 2, rz;
  iadd3 loadBs, loadBs, 18432, rz;

  // storeCs = ((warp_y*32+lane_y)*264 + warp_x*64+lane_x*2) * 2
  s32 storeCs;
  imad storeCs, warp_y, 32, lane_y;
  imad storeCs, storeCs, 264, rz;
  imad storeCs, warp_x, 64, storeCs;
  imad storeCs, lane_x, 2, storeCs;
  imad storeCs, storeCs, 2, rz;

  // loadCs = (warp*8*264 + lane*8)*2;
  s32 loadCs;
  imad loadCs, warp, 2112, rz;
  imad loadCs, lane, 8, loadCs;
  imad loadCs, loadCs, 2, rz;

  // storeC = (blk_x*256 + warp_x*8 + warp_y*128)*n + blk_y*256 + lane*8
  s32 storeC;
  imad storeC, blk_x, 256, rz;
  imad storeC, warp_x, 8, storeC;
  imad storeC, warp_y, 128, storeC;
  imad storeC, storeC, n, rz;
  imad storeC, blk_y, 256, storeC;
  imad storeC, lane, 8, storeC;

  b32 .v2 c[128];
  b32 .v2 a0[16];
  b32 .v2 a1[16];
  b32 b0[8];
  b32 b1[8];

mov c[0], rz;
mov c[1], rz;
mov c[2], rz;
mov c[3], rz;
mov c[4], rz;
mov c[5], rz;
mov c[6], rz;
mov c[7], rz;
mov c[8], rz;
mov c[9], rz;
mov c[10], rz;
mov c[11], rz;
mov c[12], rz;
mov c[13], rz;
mov c[14], rz;
mov c[15], rz;
mov c[16], rz;
mov c[17], rz;
mov c[18], rz;
mov c[19], rz;
mov c[20], rz;
mov c[21], rz;
mov c[22], rz;
mov c[23], rz;
mov c[24], rz;
mov c[25], rz;
mov c[26], rz;
mov c[27], rz;
mov c[28], rz;
mov c[29], rz;
mov c[30], rz;
mov c[31], rz;
mov c[32], rz;
mov c[33], rz;
mov c[34], rz;
mov c[35], rz;
mov c[36], rz;
mov c[37], rz;
mov c[38], rz;
mov c[39], rz;
mov c[40], rz;
mov c[41], rz;
mov c[42], rz;
mov c[43], rz;
mov c[44], rz;
mov c[45], rz;
mov c[46], rz;
mov c[47], rz;
mov c[48], rz;
mov c[49], rz;
mov c[50], rz;
mov c[51], rz;
mov c[52], rz;
mov c[53], rz;
mov c[54], rz;
mov c[55], rz;
mov c[56], rz;
mov c[57], rz;
mov c[58], rz;
mov c[59], rz;
mov c[60], rz;
mov c[61], rz;
mov c[62], rz;
mov c[63], rz;
mov c[64], rz;
mov c[65], rz;
mov c[66], rz;
mov c[67], rz;
mov c[68], rz;
mov c[69], rz;
mov c[70], rz;
mov c[71], rz;
mov c[72], rz;
mov c[73], rz;
mov c[74], rz;
mov c[75], rz;
mov c[76], rz;
mov c[77], rz;
mov c[78], rz;
mov c[79], rz;
mov c[80], rz;
mov c[81], rz;
mov c[82], rz;
mov c[83], rz;
mov c[84], rz;
mov c[85], rz;
mov c[86], rz;
mov c[87], rz;
mov c[88], rz;
mov c[89], rz;
mov c[90], rz;
mov c[91], rz;
mov c[92], rz;
mov c[93], rz;
mov c[94], rz;
mov c[95], rz;
mov c[96], rz;
mov c[97], rz;
mov c[98], rz;
mov c[99], rz;
mov c[100], rz;
mov c[101], rz;
mov c[102], rz;
mov c[103], rz;
mov c[104], rz;
mov c[105], rz;
mov c[106], rz;
mov c[107], rz;
mov c[108], rz;
mov c[109], rz;
mov c[110], rz;
mov c[111], rz;
mov c[112], rz;
mov c[113], rz;
mov c[114], rz;
mov c[115], rz;
mov c[116], rz;
mov c[117], rz;
mov c[118], rz;
mov c[119], rz;
mov c[120], rz;
mov c[121], rz;
mov c[122], rz;
mov c[123], rz;
mov c[124], rz;
mov c[125], rz;
mov c[126], rz;
mov c[127], rz;
 sts.128 [storeAs+0], A_fragment[0:3];
sts.128 [storeAs+4608], A_fragment[4:7];
sts.128 [storeAs+9216], A_fragment[8:11];
sts.128 [storeAs+13824], A_fragment[12:15];
sts.128 [storeBs+0], B_fragment[0:3];
sts.128 [storeBs+4608], B_fragment[4:7];
sts.128 [storeBs+9216], B_fragment[8:11];
sts.128 [storeBs+13824], B_fragment[12:15];
bar.sync;
lds.32 a0[0], [loadAs+0];
lds.32 a0[1], [loadAs+576];
lds.32 a0[2], [loadAs+1152];
lds.32 a0[3], [loadAs+1728];
lds.32 a0[4], [loadAs+2304];
lds.32 a0[5], [loadAs+2880];
lds.32 a0[6], [loadAs+3456];
lds.32 a0[7], [loadAs+4032];
lds.32 a0[8], [loadAs+4608];
lds.32 a0[9], [loadAs+5184];
lds.32 a0[10], [loadAs+5760];
lds.32 a0[11], [loadAs+6336];
lds.32 a0[12], [loadAs+6912];
lds.32 a0[13], [loadAs+7488];
lds.32 a0[14], [loadAs+8064];
lds.32 a0[15], [loadAs+8640];
lds.32 b0[0], [loadBs+0];
lds.32 b0[1], [loadBs+576];
lds.32 b0[2], [loadBs+1152];
lds.32 b0[3], [loadBs+1728];
lds.32 b0[4], [loadBs+2304];
lds.32 b0[5], [loadBs+2880];
lds.32 b0[6], [loadBs+3456];
lds.32 b0[7], [loadBs+4032];


pred p0;
s32 k_iter;
mov k_iter, 32;

main_loop:
isetp.lt.and p0, pt, k_iter, k, pt;
iadd3 k_iter, k_iter, 32, rz;
hmma.1688.f16 c[0:1], a0[0:1], b0[0], c[0:1];
lds.32 a1[0], [loadAs+16];
lds.32 a1[1], [loadAs+592];
hmma.1688.f16 c[2:3], a0[2:3], b0[0], c[2:3];
lds.32 a1[2], [loadAs+1168];
lds.32 a1[3], [loadAs+1744];
hmma.1688.f16 c[4:5], a0[4:5], b0[0], c[4:5];
lds.32 a1[4], [loadAs+2320];
lds.32 a1[5], [loadAs+2896];
hmma.1688.f16 c[6:7], a0[6:7], b0[0], c[6:7];
lds.32 a1[6], [loadAs+3472];
lds.32 a1[7], [loadAs+4048];
hmma.1688.f16 c[8:9], a0[8:9], b0[0], c[8:9];
lds.32 a1[8], [loadAs+4624];
lds.32 a1[9], [loadAs+5200];
hmma.1688.f16 c[10:11], a0[10:11], b0[0], c[10:11];
lds.32 a1[10], [loadAs+5776];
lds.32 a1[11], [loadAs+6352];
hmma.1688.f16 c[12:13], a0[12:13], b0[0], c[12:13];
lds.32 a1[12], [loadAs+6928];
lds.32 a1[13], [loadAs+7504];
hmma.1688.f16 c[14:15], a0[14:15], b0[0], c[14:15];
lds.32 a1[14], [loadAs+8080];
lds.32 a1[15], [loadAs+8656];
hmma.1688.f16 c[16:17], a0[0:1], b0[1], c[16:17];
lds.32 b1[0], [loadBs+16];
lds.32 b1[1], [loadBs+592];
hmma.1688.f16 c[18:19], a0[2:3], b0[1], c[18:19];
lds.32 b1[2], [loadBs+1168];
lds.32 b1[3], [loadBs+1744];
hmma.1688.f16 c[20:21], a0[4:5], b0[1], c[20:21];
lds.32 b1[4], [loadBs+2320];
lds.32 b1[5], [loadBs+2896];
hmma.1688.f16 c[22:23], a0[6:7], b0[1], c[22:23];
lds.32 b1[6], [loadBs+3472];
lds.32 b1[7], [loadBs+4048];
hmma.1688.f16 c[24:25], a0[8:9], b0[1], c[24:25];
hmma.1688.f16 c[26:27], a0[10:11], b0[1], c[26:27];
hmma.1688.f16 c[28:29], a0[12:13], b0[1], c[28:29];
hmma.1688.f16 c[30:31], a0[14:15], b0[1], c[30:31];
hmma.1688.f16 c[32:33], a0[0:1], b0[2], c[32:33];
hmma.1688.f16 c[34:35], a0[2:3], b0[2], c[34:35];
hmma.1688.f16 c[36:37], a0[4:5], b0[2], c[36:37];
hmma.1688.f16 c[38:39], a0[6:7], b0[2], c[38:39];
hmma.1688.f16 c[40:41], a0[8:9], b0[2], c[40:41];
hmma.1688.f16 c[42:43], a0[10:11], b0[2], c[42:43];
hmma.1688.f16 c[44:45], a0[12:13], b0[2], c[44:45];
hmma.1688.f16 c[46:47], a0[14:15], b0[2], c[46:47];
hmma.1688.f16 c[48:49], a0[0:1], b0[3], c[48:49];
@p0 iadd3 loadA, loadA, 32, rz;
hmma.1688.f16 c[50:51], a0[2:3], b0[3], c[50:51];
@p0 iadd3 loadB, loadB, 32, rz;
hmma.1688.f16 c[52:53], a0[4:5], b0[3], c[52:53];
@p0 imad.wide loadA_ptr, loadA, size_half, A;
hmma.1688.f16 c[54:55], a0[6:7], b0[3], c[54:55];
@p0 imad.wide loadB_ptr, loadB, size_half, B;
hmma.1688.f16 c[56:57], a0[8:9], b0[3], c[56:57];
@p0 ldg.128 A_fragment[0:3], [loadA_ptr];
hmma.1688.f16 c[58:59], a0[10:11], b0[3], c[58:59];
hmma.1688.f16 c[60:61], a0[12:13], b0[3], c[60:61];
@p0 imad.wide loadA_ptr, loadA_stride, 1, loadA_ptr;
hmma.1688.f16 c[62:63], a0[14:15], b0[3], c[62:63];
hmma.1688.f16 c[64:65], a0[0:1], b0[4], c[64:65];
@p0 ldg.128 A_fragment[4:7], [loadA_ptr];
hmma.1688.f16 c[66:67], a0[2:3], b0[4], c[66:67];
hmma.1688.f16 c[68:69], a0[4:5], b0[4], c[68:69];
hmma.1688.f16 c[70:71], a0[6:7], b0[4], c[70:71];
hmma.1688.f16 c[72:73], a0[8:9], b0[4], c[72:73];
@p0 imad.wide loadA_ptr, loadA_stride, 1, loadA_ptr;
hmma.1688.f16 c[74:75], a0[10:11], b0[4], c[74:75];
hmma.1688.f16 c[76:77], a0[12:13], b0[4], c[76:77];
hmma.1688.f16 c[78:79], a0[14:15], b0[4], c[78:79];
hmma.1688.f16 c[80:81], a0[0:1], b0[5], c[80:81];
@p0 ldg.128 A_fragment[8:11], [loadA_ptr];
hmma.1688.f16 c[82:83], a0[2:3], b0[5], c[82:83];
hmma.1688.f16 c[84:85], a0[4:5], b0[5], c[84:85];
hmma.1688.f16 c[86:87], a0[6:7], b0[5], c[86:87];
hmma.1688.f16 c[88:89], a0[8:9], b0[5], c[88:89];
@p0 imad.wide loadA_ptr, loadA_stride, 1, loadA_ptr;
hmma.1688.f16 c[90:91], a0[10:11], b0[5], c[90:91];
hmma.1688.f16 c[92:93], a0[12:13], b0[5], c[92:93];
hmma.1688.f16 c[94:95], a0[14:15], b0[5], c[94:95];
hmma.1688.f16 c[96:97], a0[0:1], b0[6], c[96:97];
hmma.1688.f16 c[98:99], a0[2:3], b0[6], c[98:99];
hmma.1688.f16 c[100:101], a0[4:5], b0[6], c[100:101];
hmma.1688.f16 c[102:103], a0[6:7], b0[6], c[102:103];
hmma.1688.f16 c[104:105], a0[8:9], b0[6], c[104:105];
hmma.1688.f16 c[106:107], a0[10:11], b0[6], c[106:107];
hmma.1688.f16 c[108:109], a0[12:13], b0[6], c[108:109];
hmma.1688.f16 c[110:111], a0[14:15], b0[6], c[110:111];
hmma.1688.f16 c[112:113], a0[0:1], b0[7], c[112:113];
hmma.1688.f16 c[114:115], a0[2:3], b0[7], c[114:115];
hmma.1688.f16 c[116:117], a0[4:5], b0[7], c[116:117];
hmma.1688.f16 c[118:119], a0[6:7], b0[7], c[118:119];
hmma.1688.f16 c[120:121], a0[8:9], b0[7], c[120:121];
hmma.1688.f16 c[122:123], a0[10:11], b0[7], c[122:123];
hmma.1688.f16 c[124:125], a0[12:13], b0[7], c[124:125];
hmma.1688.f16 c[126:127], a0[14:15], b0[7], c[126:127];
hmma.1688.f16 c[0:1], a1[0:1], b1[0], c[0:1];
lds.32 a0[0], [loadAs+32];
lds.32 a0[1], [loadAs+608];
hmma.1688.f16 c[2:3], a1[2:3], b1[0], c[2:3];
lds.32 a0[2], [loadAs+1184];
lds.32 a0[3], [loadAs+1760];
hmma.1688.f16 c[4:5], a1[4:5], b1[0], c[4:5];
lds.32 a0[4], [loadAs+2336];
lds.32 a0[5], [loadAs+2912];
hmma.1688.f16 c[6:7], a1[6:7], b1[0], c[6:7];
lds.32 a0[6], [loadAs+3488];
lds.32 a0[7], [loadAs+4064];
hmma.1688.f16 c[8:9], a1[8:9], b1[0], c[8:9];
lds.32 a0[8], [loadAs+4640];
lds.32 a0[9], [loadAs+5216];
hmma.1688.f16 c[10:11], a1[10:11], b1[0], c[10:11];
lds.32 a0[10], [loadAs+5792];
lds.32 a0[11], [loadAs+6368];
hmma.1688.f16 c[12:13], a1[12:13], b1[0], c[12:13];
lds.32 a0[12], [loadAs+6944];
lds.32 a0[13], [loadAs+7520];
hmma.1688.f16 c[14:15], a1[14:15], b1[0], c[14:15];
lds.32 a0[14], [loadAs+8096];
lds.32 a0[15], [loadAs+8672];
hmma.1688.f16 c[16:17], a1[0:1], b1[1], c[16:17];
lds.32 b0[0], [loadBs+32];
lds.32 b0[1], [loadBs+608];
hmma.1688.f16 c[18:19], a1[2:3], b1[1], c[18:19];
lds.32 b0[2], [loadBs+1184];
lds.32 b0[3], [loadBs+1760];
hmma.1688.f16 c[20:21], a1[4:5], b1[1], c[20:21];
lds.32 b0[4], [loadBs+2336];
lds.32 b0[5], [loadBs+2912];
hmma.1688.f16 c[22:23], a1[6:7], b1[1], c[22:23];
lds.32 b0[6], [loadBs+3488];
lds.32 b0[7], [loadBs+4064];
hmma.1688.f16 c[24:25], a1[8:9], b1[1], c[24:25];
hmma.1688.f16 c[26:27], a1[10:11], b1[1], c[26:27];
hmma.1688.f16 c[28:29], a1[12:13], b1[1], c[28:29];
hmma.1688.f16 c[30:31], a1[14:15], b1[1], c[30:31];
hmma.1688.f16 c[32:33], a1[0:1], b1[2], c[32:33];
hmma.1688.f16 c[34:35], a1[2:3], b1[2], c[34:35];
hmma.1688.f16 c[36:37], a1[4:5], b1[2], c[36:37];
hmma.1688.f16 c[38:39], a1[6:7], b1[2], c[38:39];
hmma.1688.f16 c[40:41], a1[8:9], b1[2], c[40:41];
hmma.1688.f16 c[42:43], a1[10:11], b1[2], c[42:43];
hmma.1688.f16 c[44:45], a1[12:13], b1[2], c[44:45];
hmma.1688.f16 c[46:47], a1[14:15], b1[2], c[46:47];
hmma.1688.f16 c[48:49], a1[0:1], b1[3], c[48:49];
hmma.1688.f16 c[50:51], a1[2:3], b1[3], c[50:51];
hmma.1688.f16 c[52:53], a1[4:5], b1[3], c[52:53];
hmma.1688.f16 c[54:55], a1[6:7], b1[3], c[54:55];
hmma.1688.f16 c[56:57], a1[8:9], b1[3], c[56:57];
@p0 ldg.128 B_fragment[0:3], [loadB_ptr];
hmma.1688.f16 c[58:59], a1[10:11], b1[3], c[58:59];
hmma.1688.f16 c[60:61], a1[12:13], b1[3], c[60:61];
hmma.1688.f16 c[62:63], a1[14:15], b1[3], c[62:63];
hmma.1688.f16 c[64:65], a1[0:1], b1[4], c[64:65];
@p0 imad.wide loadB_ptr, loadB_stride, 1, loadB_ptr;
hmma.1688.f16 c[66:67], a1[2:3], b1[4], c[66:67];
hmma.1688.f16 c[68:69], a1[4:5], b1[4], c[68:69];
hmma.1688.f16 c[70:71], a1[6:7], b1[4], c[70:71];
hmma.1688.f16 c[72:73], a1[8:9], b1[4], c[72:73];
@p0 ldg.128 B_fragment[4:7], [loadB_ptr];
hmma.1688.f16 c[74:75], a1[10:11], b1[4], c[74:75];
hmma.1688.f16 c[76:77], a1[12:13], b1[4], c[76:77];
hmma.1688.f16 c[78:79], a1[14:15], b1[4], c[78:79];
hmma.1688.f16 c[80:81], a1[0:1], b1[5], c[80:81];
@p0 imad.wide loadB_ptr, loadB_stride, 1, loadB_ptr;
hmma.1688.f16 c[82:83], a1[2:3], b1[5], c[82:83];
hmma.1688.f16 c[84:85], a1[4:5], b1[5], c[84:85];
hmma.1688.f16 c[86:87], a1[6:7], b1[5], c[86:87];
hmma.1688.f16 c[88:89], a1[8:9], b1[5], c[88:89];
@p0 ldg.128 B_fragment[8:11], [loadB_ptr];
hmma.1688.f16 c[90:91], a1[10:11], b1[5], c[90:91];
hmma.1688.f16 c[92:93], a1[12:13], b1[5], c[92:93];
hmma.1688.f16 c[94:95], a1[14:15], b1[5], c[94:95];
hmma.1688.f16 c[96:97], a1[0:1], b1[6], c[96:97];
@p0 imad.wide loadB_ptr, loadB_stride, 1, loadB_ptr;
hmma.1688.f16 c[98:99], a1[2:3], b1[6], c[98:99];
hmma.1688.f16 c[100:101], a1[4:5], b1[6], c[100:101];
hmma.1688.f16 c[102:103], a1[6:7], b1[6], c[102:103];
hmma.1688.f16 c[104:105], a1[8:9], b1[6], c[104:105];
@p0 ldg.128 A_fragment[12:15], [loadA_ptr];
@p0 ldg.128 B_fragment[12:15], [loadB_ptr];
hmma.1688.f16 c[106:107], a1[10:11], b1[6], c[106:107];
hmma.1688.f16 c[108:109], a1[12:13], b1[6], c[108:109];
hmma.1688.f16 c[110:111], a1[14:15], b1[6], c[110:111];
hmma.1688.f16 c[112:113], a1[0:1], b1[7], c[112:113];
hmma.1688.f16 c[114:115], a1[2:3], b1[7], c[114:115];
hmma.1688.f16 c[116:117], a1[4:5], b1[7], c[116:117];
hmma.1688.f16 c[118:119], a1[6:7], b1[7], c[118:119];
hmma.1688.f16 c[120:121], a1[8:9], b1[7], c[120:121];
hmma.1688.f16 c[122:123], a1[10:11], b1[7], c[122:123];
hmma.1688.f16 c[124:125], a1[12:13], b1[7], c[124:125];
hmma.1688.f16 c[126:127], a1[14:15], b1[7], c[126:127];
hmma.1688.f16 c[0:1], a0[0:1], b0[0], c[0:1];
lds.32 a1[0], [loadAs+48];
hmma.1688.f16 c[2:3], a0[2:3], b0[0], c[2:3];
lds.32 a1[1], [loadAs+624];
hmma.1688.f16 c[4:5], a0[4:5], b0[0], c[4:5];
lds.32 a1[2], [loadAs+1200];
hmma.1688.f16 c[6:7], a0[6:7], b0[0], c[6:7];
lds.32 a1[3], [loadAs+1776];
hmma.1688.f16 c[8:9], a0[8:9], b0[0], c[8:9];
lds.32 a1[4], [loadAs+2352];
hmma.1688.f16 c[10:11], a0[10:11], b0[0], c[10:11];
lds.32 a1[5], [loadAs+2928];
hmma.1688.f16 c[12:13], a0[12:13], b0[0], c[12:13];
lds.32 a1[6], [loadAs+3504];
hmma.1688.f16 c[14:15], a0[14:15], b0[0], c[14:15];
lds.32 a1[7], [loadAs+4080];
hmma.1688.f16 c[16:17], a0[0:1], b0[1], c[16:17];
lds.32 a1[8], [loadAs+4656];
hmma.1688.f16 c[18:19], a0[2:3], b0[1], c[18:19];
lds.32 a1[9], [loadAs+5232];
hmma.1688.f16 c[20:21], a0[4:5], b0[1], c[20:21];
lds.32 a1[10], [loadAs+5808];
hmma.1688.f16 c[22:23], a0[6:7], b0[1], c[22:23];
lds.32 a1[11], [loadAs+6384];
hmma.1688.f16 c[24:25], a0[8:9], b0[1], c[24:25];
lds.32 a1[12], [loadAs+6960];
hmma.1688.f16 c[26:27], a0[10:11], b0[1], c[26:27];
lds.32 a1[13], [loadAs+7536];
hmma.1688.f16 c[28:29], a0[12:13], b0[1], c[28:29];
lds.32 a1[14], [loadAs+8112];
hmma.1688.f16 c[30:31], a0[14:15], b0[1], c[30:31];
lds.32 a1[15], [loadAs+8688];
hmma.1688.f16 c[32:33], a0[0:1], b0[2], c[32:33];
lds.32 b1[0], [loadBs+48];
hmma.1688.f16 c[34:35], a0[2:3], b0[2], c[34:35];
lds.32 b1[1], [loadBs+624];
hmma.1688.f16 c[36:37], a0[4:5], b0[2], c[36:37];
lds.32 b1[2], [loadBs+1200];
hmma.1688.f16 c[38:39], a0[6:7], b0[2], c[38:39];
lds.32 b1[3], [loadBs+1776];
hmma.1688.f16 c[40:41], a0[8:9], b0[2], c[40:41];
lds.32 b1[4], [loadBs+2352];
hmma.1688.f16 c[42:43], a0[10:11], b0[2], c[42:43];
lds.32 b1[5], [loadBs+2928];
hmma.1688.f16 c[44:45], a0[12:13], b0[2], c[44:45];
lds.32 b1[6], [loadBs+3504];
hmma.1688.f16 c[46:47], a0[14:15], b0[2], c[46:47];
lds.32 b1[7], [loadBs+4080];
hmma.1688.f16 c[48:49], a0[0:1], b0[3], c[48:49];
hmma.1688.f16 c[50:51], a0[2:3], b0[3], c[50:51];
hmma.1688.f16 c[52:53], a0[4:5], b0[3], c[52:53];
hmma.1688.f16 c[54:55], a0[6:7], b0[3], c[54:55];
hmma.1688.f16 c[56:57], a0[8:9], b0[3], c[56:57];
hmma.1688.f16 c[58:59], a0[10:11], b0[3], c[58:59];
hmma.1688.f16 c[60:61], a0[12:13], b0[3], c[60:61];
hmma.1688.f16 c[62:63], a0[14:15], b0[3], c[62:63];
hmma.1688.f16 c[64:65], a0[0:1], b0[4], c[64:65];
hmma.1688.f16 c[66:67], a0[2:3], b0[4], c[66:67];
hmma.1688.f16 c[68:69], a0[4:5], b0[4], c[68:69];
hmma.1688.f16 c[70:71], a0[6:7], b0[4], c[70:71];
hmma.1688.f16 c[72:73], a0[8:9], b0[4], c[72:73];
hmma.1688.f16 c[74:75], a0[10:11], b0[4], c[74:75];
hmma.1688.f16 c[76:77], a0[12:13], b0[4], c[76:77];
hmma.1688.f16 c[78:79], a0[14:15], b0[4], c[78:79];
hmma.1688.f16 c[80:81], a0[0:1], b0[5], c[80:81];
@p0 bar.sync;
hmma.1688.f16 c[82:83], a0[2:3], b0[5], c[82:83];
hmma.1688.f16 c[84:85], a0[4:5], b0[5], c[84:85];
hmma.1688.f16 c[86:87], a0[6:7], b0[5], c[86:87];
hmma.1688.f16 c[88:89], a0[8:9], b0[5], c[88:89];
hmma.1688.f16 c[90:91], a0[10:11], b0[5], c[90:91];
hmma.1688.f16 c[92:93], a0[12:13], b0[5], c[92:93];
hmma.1688.f16 c[94:95], a0[14:15], b0[5], c[94:95];
hmma.1688.f16 c[96:97], a0[0:1], b0[6], c[96:97];
hmma.1688.f16 c[98:99], a0[2:3], b0[6], c[98:99];
hmma.1688.f16 c[100:101], a0[4:5], b0[6], c[100:101];
hmma.1688.f16 c[102:103], a0[6:7], b0[6], c[102:103];
hmma.1688.f16 c[104:105], a0[8:9], b0[6], c[104:105];
hmma.1688.f16 c[106:107], a0[10:11], b0[6], c[106:107];
hmma.1688.f16 c[108:109], a0[12:13], b0[6], c[108:109];
hmma.1688.f16 c[110:111], a0[14:15], b0[6], c[110:111];
hmma.1688.f16 c[112:113], a0[0:1], b0[7], c[112:113];
hmma.1688.f16 c[114:115], a0[2:3], b0[7], c[114:115];
hmma.1688.f16 c[116:117], a0[4:5], b0[7], c[116:117];
hmma.1688.f16 c[118:119], a0[6:7], b0[7], c[118:119];
hmma.1688.f16 c[120:121], a0[8:9], b0[7], c[120:121];
hmma.1688.f16 c[122:123], a0[10:11], b0[7], c[122:123];
hmma.1688.f16 c[124:125], a0[12:13], b0[7], c[124:125];
hmma.1688.f16 c[126:127], a0[14:15], b0[7], c[126:127];
hmma.1688.f16 c[0:1], a1[0:1], b1[0], c[0:1];
hmma.1688.f16 c[2:3], a1[2:3], b1[0], c[2:3];
hmma.1688.f16 c[4:5], a1[4:5], b1[0], c[4:5];
hmma.1688.f16 c[6:7], a1[6:7], b1[0], c[6:7];
hmma.1688.f16 c[8:9], a1[8:9], b1[0], c[8:9];
hmma.1688.f16 c[10:11], a1[10:11], b1[0], c[10:11];
hmma.1688.f16 c[12:13], a1[12:13], b1[0], c[12:13];
hmma.1688.f16 c[14:15], a1[14:15], b1[0], c[14:15];
hmma.1688.f16 c[16:17], a1[0:1], b1[1], c[16:17];
hmma.1688.f16 c[18:19], a1[2:3], b1[1], c[18:19];
hmma.1688.f16 c[20:21], a1[4:5], b1[1], c[20:21];
hmma.1688.f16 c[22:23], a1[6:7], b1[1], c[22:23];
hmma.1688.f16 c[24:25], a1[8:9], b1[1], c[24:25];
hmma.1688.f16 c[26:27], a1[10:11], b1[1], c[26:27];
hmma.1688.f16 c[28:29], a1[12:13], b1[1], c[28:29];
@p0 sts.128 [storeAs+0], A_fragment[0:3];
@p0 sts.128 [storeAs+4608], A_fragment[4:7];
hmma.1688.f16 c[30:31], a1[14:15], b1[1], c[30:31];
@p0 sts.128 [storeAs+9216], A_fragment[8:11];
@p0 sts.128 [storeAs+13824], A_fragment[12:15];
hmma.1688.f16 c[32:33], a1[0:1], b1[2], c[32:33];
@p0 sts.128 [storeBs+0], B_fragment[0:3];
@p0 sts.128 [storeBs+4608], B_fragment[4:7];
hmma.1688.f16 c[34:35], a1[2:3], b1[2], c[34:35];
@p0 sts.128 [storeBs+9216], B_fragment[8:11];
@p0 sts.128 [storeBs+13824], B_fragment[12:15];
hmma.1688.f16 c[36:37], a1[4:5], b1[2], c[36:37];
@p0 bar.sync;
@p0 lds.32 a0[0], [loadAs+0];
hmma.1688.f16 c[38:39], a1[6:7], b1[2], c[38:39];
@p0 lds.32 a0[1], [loadAs+576];
hmma.1688.f16 c[40:41], a1[8:9], b1[2], c[40:41];
@p0 lds.32 a0[2], [loadAs+1152];
@p0 lds.32 a0[3], [loadAs+1728];
hmma.1688.f16 c[42:43], a1[10:11], b1[2], c[42:43];
@p0 lds.32 a0[4], [loadAs+2304];
@p0 lds.32 a0[5], [loadAs+2880];
hmma.1688.f16 c[44:45], a1[12:13], b1[2], c[44:45];
hmma.1688.f16 c[46:47], a1[14:15], b1[2], c[46:47];
hmma.1688.f16 c[48:49], a1[0:1], b1[3], c[48:49];
hmma.1688.f16 c[50:51], a1[2:3], b1[3], c[50:51];
hmma.1688.f16 c[52:53], a1[4:5], b1[3], c[52:53];
@p0 lds.32 a0[6], [loadAs+3456];
hmma.1688.f16 c[54:55], a1[6:7], b1[3], c[54:55];
hmma.1688.f16 c[56:57], a1[8:9], b1[3], c[56:57];
hmma.1688.f16 c[58:59], a1[10:11], b1[3], c[58:59];
hmma.1688.f16 c[60:61], a1[12:13], b1[3], c[60:61];
hmma.1688.f16 c[62:63], a1[14:15], b1[3], c[62:63];
hmma.1688.f16 c[64:65], a1[0:1], b1[4], c[64:65];
hmma.1688.f16 c[66:67], a1[2:3], b1[4], c[66:67];
hmma.1688.f16 c[68:69], a1[4:5], b1[4], c[68:69];
hmma.1688.f16 c[70:71], a1[6:7], b1[4], c[70:71];
@p0 lds.32 a0[7], [loadAs+4032];
hmma.1688.f16 c[72:73], a1[8:9], b1[4], c[72:73];
@p0 lds.32 a0[8], [loadAs+4608];
hmma.1688.f16 c[74:75], a1[10:11], b1[4], c[74:75];
@p0 lds.32 a0[9], [loadAs+5184];
hmma.1688.f16 c[76:77], a1[12:13], b1[4], c[76:77];
@p0 lds.32 a0[10], [loadAs+5760];
@p0 lds.32 a0[11], [loadAs+6336];
hmma.1688.f16 c[78:79], a1[14:15], b1[4], c[78:79];
@p0 lds.32 a0[12], [loadAs+6912];
@p0 lds.32 a0[13], [loadAs+7488];
hmma.1688.f16 c[80:81], a1[0:1], b1[5], c[80:81];
@p0 lds.32 a0[14], [loadAs+8064];
@p0 lds.32 a0[15], [loadAs+8640];
hmma.1688.f16 c[82:83], a1[2:3], b1[5], c[82:83];
@p0 lds.32 b0[0], [loadBs+0];
@p0 lds.32 b0[1], [loadBs+576];
hmma.1688.f16 c[84:85], a1[4:5], b1[5], c[84:85];
@p0 lds.32 b0[2], [loadBs+1152];
@p0 lds.32 b0[3], [loadBs+1728];
hmma.1688.f16 c[86:87], a1[6:7], b1[5], c[86:87];
@p0 lds.32 b0[4], [loadBs+2304];
@p0 lds.32 b0[5], [loadBs+2880];
@p0 lds.32 b0[6], [loadBs+3456];
@p0 lds.32 b0[7], [loadBs+4032];
hmma.1688.f16 c[88:89], a1[8:9], b1[5], c[88:89];
hmma.1688.f16 c[90:91], a1[10:11], b1[5], c[90:91];
hmma.1688.f16 c[92:93], a1[12:13], b1[5], c[92:93];
hmma.1688.f16 c[94:95], a1[14:15], b1[5], c[94:95];
hmma.1688.f16 c[96:97], a1[0:1], b1[6], c[96:97];
hmma.1688.f16 c[98:99], a1[2:3], b1[6], c[98:99];
hmma.1688.f16 c[100:101], a1[4:5], b1[6], c[100:101];
hmma.1688.f16 c[102:103], a1[6:7], b1[6], c[102:103];
hmma.1688.f16 c[104:105], a1[8:9], b1[6], c[104:105];
hmma.1688.f16 c[106:107], a1[10:11], b1[6], c[106:107];
hmma.1688.f16 c[108:109], a1[12:13], b1[6], c[108:109];
hmma.1688.f16 c[110:111], a1[14:15], b1[6], c[110:111];
hmma.1688.f16 c[112:113], a1[0:1], b1[7], c[112:113];
hmma.1688.f16 c[114:115], a1[2:3], b1[7], c[114:115];
hmma.1688.f16 c[116:117], a1[4:5], b1[7], c[116:117];
hmma.1688.f16 c[118:119], a1[6:7], b1[7], c[118:119];
hmma.1688.f16 c[120:121], a1[8:9], b1[7], c[120:121];
hmma.1688.f16 c[122:123], a1[10:11], b1[7], c[122:123];
hmma.1688.f16 c[124:125], a1[12:13], b1[7], c[124:125];
hmma.1688.f16 c[126:127], a1[14:15], b1[7], c[126:127];
 
@p0 bra main_loop;

s64 storeC_ptr;
s32 imm32, storeC_stride;
mov imm32, 32;
s32 imm2;
mov imm2, 2;
// storeC_stride = 2*n;
imad storeC_stride, imm2, n, rz;

b32 .v4 C_fragment[4];

bar.sync;
sts.32 [storeCs+0], c[0];
sts.32 [storeCs+4224], c[1];
sts.32 [storeCs+8448], c[2];
sts.32 [storeCs+12672], c[3];
sts.32 [storeCs+16], c[16];
sts.32 [storeCs+4240], c[17];
sts.32 [storeCs+8464], c[18];
sts.32 [storeCs+12688], c[19];
sts.32 [storeCs+32], c[32];
sts.32 [storeCs+4256], c[33];
sts.32 [storeCs+8480], c[34];
sts.32 [storeCs+12704], c[35];
sts.32 [storeCs+48], c[48];
sts.32 [storeCs+4272], c[49];
sts.32 [storeCs+8496], c[50];
sts.32 [storeCs+12720], c[51];
sts.32 [storeCs+64], c[64];
sts.32 [storeCs+4288], c[65];
sts.32 [storeCs+8512], c[66];
sts.32 [storeCs+12736], c[67];
sts.32 [storeCs+80], c[80];
sts.32 [storeCs+4304], c[81];
sts.32 [storeCs+8528], c[82];
sts.32 [storeCs+12752], c[83];
sts.32 [storeCs+96], c[96];
sts.32 [storeCs+4320], c[97];
sts.32 [storeCs+8544], c[98];
sts.32 [storeCs+12768], c[99];
sts.32 [storeCs+112], c[112];
sts.32 [storeCs+4336], c[113];
sts.32 [storeCs+8560], c[114];
sts.32 [storeCs+12784], c[115];
bar.sync;
imad.wide storeC_ptr, storeC, imm2, C;
lds.128 C_fragment[0:3], [loadCs+0];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+528];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+1056];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+1584];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+2112];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+2640];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+3168];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+3696];
stg.128 [storeC_ptr], C_fragment[0:3];
imad storeC, imm32, n, storeC;
bar.sync;
sts.32 [storeCs+0], c[4];
sts.32 [storeCs+4224], c[5];
sts.32 [storeCs+8448], c[6];
sts.32 [storeCs+12672], c[7];
sts.32 [storeCs+16], c[20];
sts.32 [storeCs+4240], c[21];
sts.32 [storeCs+8464], c[22];
sts.32 [storeCs+12688], c[23];
sts.32 [storeCs+32], c[36];
sts.32 [storeCs+4256], c[37];
sts.32 [storeCs+8480], c[38];
sts.32 [storeCs+12704], c[39];
sts.32 [storeCs+48], c[52];
sts.32 [storeCs+4272], c[53];
sts.32 [storeCs+8496], c[54];
sts.32 [storeCs+12720], c[55];
sts.32 [storeCs+64], c[68];
sts.32 [storeCs+4288], c[69];
sts.32 [storeCs+8512], c[70];
sts.32 [storeCs+12736], c[71];
sts.32 [storeCs+80], c[84];
sts.32 [storeCs+4304], c[85];
sts.32 [storeCs+8528], c[86];
sts.32 [storeCs+12752], c[87];
sts.32 [storeCs+96], c[100];
sts.32 [storeCs+4320], c[101];
sts.32 [storeCs+8544], c[102];
sts.32 [storeCs+12768], c[103];
sts.32 [storeCs+112], c[116];
sts.32 [storeCs+4336], c[117];
sts.32 [storeCs+8560], c[118];
sts.32 [storeCs+12784], c[119];
bar.sync;
imad.wide storeC_ptr, storeC, imm2, C;
lds.128 C_fragment[0:3], [loadCs+0];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+528];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+1056];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+1584];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+2112];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+2640];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+3168];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+3696];
stg.128 [storeC_ptr], C_fragment[0:3];
imad storeC, imm32, n, storeC;
bar.sync;
sts.32 [storeCs+0], c[8];
sts.32 [storeCs+4224], c[9];
sts.32 [storeCs+8448], c[10];
sts.32 [storeCs+12672], c[11];
sts.32 [storeCs+16], c[24];
sts.32 [storeCs+4240], c[25];
sts.32 [storeCs+8464], c[26];
sts.32 [storeCs+12688], c[27];
sts.32 [storeCs+32], c[40];
sts.32 [storeCs+4256], c[41];
sts.32 [storeCs+8480], c[42];
sts.32 [storeCs+12704], c[43];
sts.32 [storeCs+48], c[56];
sts.32 [storeCs+4272], c[57];
sts.32 [storeCs+8496], c[58];
sts.32 [storeCs+12720], c[59];
sts.32 [storeCs+64], c[72];
sts.32 [storeCs+4288], c[73];
sts.32 [storeCs+8512], c[74];
sts.32 [storeCs+12736], c[75];
sts.32 [storeCs+80], c[88];
sts.32 [storeCs+4304], c[89];
sts.32 [storeCs+8528], c[90];
sts.32 [storeCs+12752], c[91];
sts.32 [storeCs+96], c[104];
sts.32 [storeCs+4320], c[105];
sts.32 [storeCs+8544], c[106];
sts.32 [storeCs+12768], c[107];
sts.32 [storeCs+112], c[120];
sts.32 [storeCs+4336], c[121];
sts.32 [storeCs+8560], c[122];
sts.32 [storeCs+12784], c[123];
bar.sync;
imad.wide storeC_ptr, storeC, imm2, C;
lds.128 C_fragment[0:3], [loadCs+0];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+528];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+1056];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+1584];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+2112];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+2640];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+3168];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+3696];
stg.128 [storeC_ptr], C_fragment[0:3];
imad storeC, imm32, n, storeC;
bar.sync;
sts.32 [storeCs+0], c[12];
sts.32 [storeCs+4224], c[13];
sts.32 [storeCs+8448], c[14];
sts.32 [storeCs+12672], c[15];
sts.32 [storeCs+16], c[28];
sts.32 [storeCs+4240], c[29];
sts.32 [storeCs+8464], c[30];
sts.32 [storeCs+12688], c[31];
sts.32 [storeCs+32], c[44];
sts.32 [storeCs+4256], c[45];
sts.32 [storeCs+8480], c[46];
sts.32 [storeCs+12704], c[47];
sts.32 [storeCs+48], c[60];
sts.32 [storeCs+4272], c[61];
sts.32 [storeCs+8496], c[62];
sts.32 [storeCs+12720], c[63];
sts.32 [storeCs+64], c[76];
sts.32 [storeCs+4288], c[77];
sts.32 [storeCs+8512], c[78];
sts.32 [storeCs+12736], c[79];
sts.32 [storeCs+80], c[92];
sts.32 [storeCs+4304], c[93];
sts.32 [storeCs+8528], c[94];
sts.32 [storeCs+12752], c[95];
sts.32 [storeCs+96], c[108];
sts.32 [storeCs+4320], c[109];
sts.32 [storeCs+8544], c[110];
sts.32 [storeCs+12768], c[111];
sts.32 [storeCs+112], c[124];
sts.32 [storeCs+4336], c[125];
sts.32 [storeCs+8560], c[126];
sts.32 [storeCs+12784], c[127];
bar.sync;
imad.wide storeC_ptr, storeC, imm2, C;
lds.128 C_fragment[0:3], [loadCs+0];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+528];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+1056];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+1584];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+2112];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+2640];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+3168];
stg.128 [storeC_ptr], C_fragment[0:3];
imad.wide storeC_ptr, storeC_stride, 1, storeC_ptr;
lds.128 C_fragment[0:3], [loadCs+3696];
stg.128 [storeC_ptr], C_fragment[0:3];
 exit;
}
